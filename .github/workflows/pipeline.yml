name: Node.js Package

on:
  push:
  pull_request:
    branches: [master]
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: npm install
      - run: npm test


  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{secrets.GKE_SA_KEY_DEC}}
          service_account_email: ${{secrets.GKE_EMAIL}}
          project_id: ${{secrets.GCLOUD_PROJECT_ID}}
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
      - name: Build
        run: |-
          docker build \
            --tag "gcr.io/${{secrets.GCLOUD_PROJECT_ID}}/${{github.repository}}:${{github.sha}}" \
            --build-arg GITHUB_SHA="${{github.sha}}" \
            --build-arg GITHUB_REF="${{github.ref}}"             .
        #Push docker image
      - name: Publish
        run: |-
          docker push \
            "gcr.io/${{secrets.GCLOUD_PROJECT_ID}}/${{github.repository}}:${{github.sha}}"

  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      IMAGE_NAME: gcr.io/${{secrets.GCLOUD_PROJECT_ID}}/${{github.repository}}:${{github.sha}}
      PORT: 3000
    steps:
      - name: Check Out
        uses: actions/checkout@v2
        # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{secrets.GKE_SA_KEY_DEC}}
          service_account_email: ${{secrets.GKE_EMAIL}}
          project_id: ${{secrets.GCLOUD_PROJECT_ID}}
      - name: Deploy app to staging
        if: github.ref != 'refs/heads/master'   
        run: |-
          gcloud container clusters get-credentials ${{secrets.GCLOUD_CLUSTER_NAME}} --zone=${{secrets.GCLOUD_ZONE}}
          sed -i "s|{{image}}|gcr.io/${{secrets.GCLOUD_PROJECT_ID}}/${{github.repository}}:${{github.sha}}|g" simple-app.yml
          sed -i "s|{{replicas}}|1|g" simple-app.yml
          sed -i "s|{{env}}|stage|g" simple-app.yml            
          kubectl apply -f simple-app.yml
      - name: Deploy app to production
        if: github.ref == 'refs/heads/master' 
        run: |-
          gcloud container clusters get-credentials ${{secrets.GCLOUD_CLUSTER_NAME}} --zone=${{secrets.GCLOUD_ZONE}}
          sed -i "s|{{image}}|gcr.io/${{secrets.GCLOUD_PROJECT_ID}}/${{github.repository}}:${{github.sha}}|g" simple-app.yml
          sed -i "s|{{replicas}}|3|g" simple-app.yml
          sed -i "s|{{env}}|production|g" simple-app.yml            
          kubectl apply -f simple-app.yml 
